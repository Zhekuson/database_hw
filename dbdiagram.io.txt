Enum subject {
  programming
  mathematics
  english
  russian
  literature
  physics
  geography
}

/---------------------------------/

Table users as U {
  id int [pk, increment]
  name nvarchar(30) [not null]
  surname nvarchar(30)
  middle_name nvarchar(30)
  birth_date datetime
  class int
  email nvarchar(20)
  photo varbinary
}

Table olimpiads as O {
  id int [pk, increment]
  name nvarchar(30)
  logo varbinary
  level int
  university_id int
}

Table olympiad_subjects as OSUBJ { 
  olympiad_id int
  subject subject
  Indexes {
    (olympiad_id, subject) [pk]
  }
}

Table olimpiad_rounds as ORND  {
  id int
  olympiad_id int
  is_online bool
  registration_date datetime
  registration_end_date datetime
  start_date datetime
  end_date datetime
  place nvarchar(100)
  is_final bit
  Indexes {
    (id, olympiad_id) [pk]
  }
}

Table olympiad_criteria as OCRIT { 
  round_id int
  diploma_level nvarchar(20)
  min_score int
  Indexes {
    (round_id, diploma_level) [pk]
  }
}

Table olympiad_bonuses as OBONUS { 
  olympiad_id int
  university_id int
  
  diploma_level nvarchar(50)
  //BVI, +n points
  bonus_type nvarchar(50)
  bonus_points int
  Indexes {
    (university_id, olympiad_id) [pk]
  }
}

Table user_participation_in_olimpiad as UINO { 
  user_id int
  olympiad_id int
  result varchar(20)
  score int
  Indexes {
    (user_id, olympiad_id) [pk]
  }
}

Table friends as F {
  first_id int
  second_id int
  start_date datetime
  Indexes {
    (first_id, second_id) [pk]
  }
}

Table tutors {
  id int [pk, increment]
  university_id int
  name nvarchar(30) [not null]
  surname nvarchar(30)
  middle_name nvarchar(30)
  birth_date datetime
  email nvarchar(20)
  photo varbinary
  price int
}

Table tutors_subject {
  tutor_id int
  subject subject
  Indexes {
    (tutor_id, subject) [pk]
  }
}

Table tutors_student { 
  tutor_id int
  user_id int
  is_active_relation bit
  start_date datetime
  end_date datetime
  Indexes {
    (tutor_id, user_id) [pk]
  }
}

Table university as UNV {
  id int [pk, increment]
  full_name varchar
  address varchar
  phone varchar
  email nvarchar
}

Table university_worker {
  id int [pk, increment]
  university_id int
  name nvarchar(30) [not null]
  surname nvarchar(30)
  middle_name nvarchar(30)
  birth_date datetime
  email nvarchar(20)
  photo varbinary
  position nvarchar(40)
}

Table responsible_workers_for_olympiad { 
  olympiad_id int
  worker_id int
  Indexes {
    (olympiad_id, worker_id) [pk]
  }
}

Table course_for_olympiad as CRSOLYMP {
  olympiad_id int
  tutor_id int
  subject_id subject
  for_which_class int
  url nvarchar(50)
  Indexes {
    (olympiad_id, tutor_id) [pk]
  }
}

Table user_round_registration as URR  {
  id int
  user_id int
  round_id int
  registration_date datetime
  //Approved, processing
  status nvarchar(50)
  Indexes {
    (user_id, round_id) [pk]
  }
}

Table registration_data_unit as RDU { 
  round_id int
  key nvarchar(40)
  value nvarchar(40)
  Indexes {
    (round_id, key) [pk]
  }
}

Table filled_registration_data as FRD {
  registration_id int
  key nvarchar(40)
  value nvarchar(40)
  Indexes {
    (registration_id, key) [pk]
  }
}

Ref: "tutors_subject"."tutor_id" < "tutors"."id"

Ref: "university"."id" < "olympiad_bonuses"."university_id"

Ref: "olimpiads"."id" < "olympiad_subjects"."olympiad_id"

Ref: "course_for_olympiad"."olympiad_id" < "olimpiads"."id"

Ref: "course_for_olympiad"."tutor_id" < "tutors"."id"


Ref: "user_participation_in_olimpiad"."user_id" < "users"."id"

Ref: "user_participation_in_olimpiad"."olympiad_id" < "olimpiads"."id"

Ref: "olimpiad_rounds"."olympiad_id" < "olimpiads"."id"

Ref: "tutors_student"."tutor_id" < "tutors"."id"

Ref: "tutors_student"."user_id" < "users"."id"

Ref: "olimpiads"."id" < "responsible_workers_for_olympiad"."olympiad_id"

Ref: "university_worker"."id" < "responsible_workers_for_olympiad"."worker_id"

Ref: "user_round_registration"."user_id" < "users"."id"

Ref: "user_round_registration"."round_id" < "olimpiad_rounds"."id"

Ref: "olympiad_criteria"."round_id" < "olimpiad_rounds"."id"

Ref: "friends"."first_id" < "users"."id"

Ref: "friends"."second_id" < "users"."id"

Ref: "university_worker"."university_id" < "university"."id"

Ref: "filled_registration_data"."registration_id" < "user_round_registration"."id"

Ref: "registration_data_unit"."round_id" < "olimpiad_rounds"."id"
